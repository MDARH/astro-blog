---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import type { ImageMetadata } from 'astro';
import FallbackImage from '../assets/blog-placeholder-1.jpg';
import { SITE_TITLE, SITE_DESCRIPTION, SITE_AUTHOR, SITE_URL } from '../consts';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
	article?: {
		publishedTime?: string;
		modifiedTime?: string;
		author?: string;
		tags?: string[];
		section?: string;
	};
	noindex?: boolean;
	keywords?: string[];
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { title, description, image = FallbackImage, article, noindex = false, keywords = [] } = Astro.props;

// Generate structured data for the page
const structuredData = {
	'@context': 'https://schema.org',
	'@type': article ? 'Article' : 'WebPage',
	headline: title,
	description: description,
	url: canonicalURL.href,
	image: new URL(image.src, Astro.url).href,
	...(article ? {
		datePublished: article.publishedTime,
		dateModified: article.modifiedTime || article.publishedTime,
		author: {
			'@type': 'Person',
			name: article.author || SITE_AUTHOR
		},
		publisher: {
			'@type': 'Organization',
			name: SITE_TITLE,
			url: SITE_URL
		},
		articleSection: article.section || 'Technology',
		keywords: article.tags?.join(', ') || keywords.join(', ')
	} : {
		publisher: {
			'@type': 'Organization',
			name: SITE_TITLE,
			url: SITE_URL
		}
	})
};

// Generate breadcrumb structured data
const pathSegments = Astro.url.pathname.split('/').filter(segment => segment);
const breadcrumbData = {
	'@context': 'https://schema.org',
	'@type': 'BreadcrumbList',
	itemListElement: [
		{
			'@type': 'ListItem',
			position: 1,
			name: 'Home',
			item: SITE_URL
		},
		...pathSegments.map((segment, index) => ({
			'@type': 'ListItem',
			position: index + 2,
			name: segment.charAt(0).toUpperCase() + segment.slice(1).replace(/-/g, ' '),
			item: `${SITE_URL}/${pathSegments.slice(0, index + 1).join('/')}`
		}))
	]
};
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />
<meta name="author" content={SITE_AUTHOR} />
<meta name="robots" content={noindex ? 'noindex, nofollow' : 'index, follow'} />
<meta name="googlebot" content={noindex ? 'noindex, nofollow' : 'index, follow'} />
{keywords.length > 0 && <meta name="keywords" content={keywords.join(', ')} />}

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="theme-color" content="#2337ff" />
<meta name="color-scheme" content="light dark" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={article ? 'article' : 'website'} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image.src, Astro.url)} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:locale" content="en_US" />
{article && (
	<>
		<meta property="article:published_time" content={article.publishedTime} />
		{article.modifiedTime && <meta property="article:modified_time" content={article.modifiedTime} />}
		<meta property="article:author" content={article.author || SITE_AUTHOR} />
		{article.section && <meta property="article:section" content={article.section} />}
		{article.tags && article.tags.map(tag => <meta property="article:tag" content={tag} />)}
	</>
)}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image.src, Astro.url)} />
<meta property="twitter:image:alt" content={title} />
<meta property="twitter:site" content="@bdapextech" />
<meta property="twitter:creator" content="@bdapextech" />

<!-- Additional SEO Meta Tags -->
<meta name="format-detection" content="telephone=no" />
<meta name="msapplication-TileColor" content="#2337ff" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="default" />

<!-- Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
{pathSegments.length > 0 && (
	<script type="application/ld+json" set:html={JSON.stringify(breadcrumbData)} />
)}

<!-- Preconnect to external domains -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://picsum.photos" />
<link rel="dns-prefetch" href="https://www.google-analytics.com" />
