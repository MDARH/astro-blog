---
// Social Share Component for blog posts
interface Props {
	title: string;
	url?: string;
	description?: string;
	class?: string;
}

const { title, url, description, class: className = '' } = Astro.props;
// Use bdapex.com as the base domain
const baseUrl = 'https://bdapex.com';
const currentPath = Astro.url.pathname;
const shareUrl = url || `${baseUrl}${currentPath}`;
const shareTitle = encodeURIComponent(title);
const shareDescription = encodeURIComponent(description || '');
const encodedUrl = encodeURIComponent(shareUrl);
---

<div class={`social-share ${className}`}>
	<h4 class="share-title">Share this article</h4>
	<div class="share-buttons">
		<!-- X (formerly Twitter) Share -->
		<a 
			href={`https://twitter.com/intent/tweet?text=${shareTitle}&url=${encodedUrl}&via=somadhantec`}
			target="_blank"
			rel="noopener noreferrer"
			class="share-btn x-twitter"
			aria-label="Share on X"
		>
			<svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
				<path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
			</svg>
			<span>X</span>
		</a>

		<!-- Facebook Share -->
		<a 
			href={`https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}`}
			target="_blank"
			rel="noopener noreferrer"
			class="share-btn facebook"
			aria-label="Share on Facebook"
		>
			<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
				<path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path>
			</svg>
			<span>Facebook</span>
		</a>

		<!-- LinkedIn Share -->
		<a 
			href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodedUrl}`}
			target="_blank"
			rel="noopener noreferrer"
			class="share-btn linkedin"
			aria-label="Share on LinkedIn"
		>
			<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
				<path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
				<rect x="2" y="9" width="4" height="12"></rect>
				<circle cx="4" cy="4" r="2"></circle>
			</svg>
			<span>LinkedIn</span>
		</a>

		<!-- WhatsApp Share -->
		<a 
			href={`https://wa.me/?text=${shareTitle}%20${encodedUrl}`}
			target="_blank"
			rel="noopener noreferrer"
			class="share-btn whatsapp"
			aria-label="Share on WhatsApp"
		>
			<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
				<path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>
			</svg>
			<span>WhatsApp</span>
		</a>

		<!-- Copy Link -->
		<button 
			class="share-btn copy-link"
			data-url={shareUrl}
			aria-label="Copy link"
		>
			<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
				<path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
				<path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
			</svg>
			<span class="copy-text">Copy Link</span>
		</button>
	</div>
</div>

<style>
	.social-share {
		background: var(--card-bg);
		border: 1px solid var(--border-color);
		border-radius: 12px;
		padding: 1.5rem;
		margin: 2rem 0;
	}

	.share-title {
		margin: 0 0 1rem 0;
		font-size: 1.1rem;
		font-weight: 600;
		color: var(--text-color);
	}

	.share-buttons {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
		gap: 0.75rem;
	}

	.share-btn {
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 0.5rem;
		padding: 0.75rem 1rem;
		border: 1px solid var(--border-color);
		border-radius: 8px;
		text-decoration: none;
		color: var(--text-color);
		background: var(--bg-color);
		transition: all 0.2s ease;
		font-size: 0.9rem;
		font-weight: 500;
		cursor: pointer;
		font-family: inherit;
	}

	.share-btn:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
	}

	.share-btn span {
		display: none;
	}

	/* Platform-specific colors */
	.x-twitter:hover {
		background: #000000;
		color: white;
		border-color: #000000;
	}

	.facebook:hover {
		background: #4267b2;
		color: white;
		border-color: #4267b2;
	}

	.linkedin:hover {
		background: #0077b5;
		color: white;
		border-color: #0077b5;
	}

	.whatsapp:hover {
		background: #25d366;
		color: white;
		border-color: #25d366;
	}

	.copy-link:hover {
		background: var(--accent);
		color: white;
		border-color: var(--accent);
	}

	.copy-link.copied {
		background: #10b981;
		color: white;
		border-color: #10b981;
	}

	/* Desktop styles */
	@media (min-width: 640px) {
		.share-buttons {
			grid-template-columns: repeat(5, 1fr);
		}

		.share-btn span {
			display: inline;
		}
	}

	/* Mobile styles */
	@media (max-width: 639px) {
		.share-buttons {
			grid-template-columns: repeat(5, 1fr);
			gap: 0.5rem;
		}

		.share-btn {
			padding: 0.75rem 0.5rem;
			flex-direction: column;
			gap: 0.25rem;
			font-size: 0.75rem;
		}

		.share-btn svg {
			width: 18px;
			height: 18px;
		}
	}

	/* Dark mode adjustments */
	[data-theme="dark"] .social-share {
		background: var(--card-bg);
	}

	[data-theme="dark"] .share-btn {
		background: var(--bg-secondary);
	}
</style>

<script>
	/**
	 * Social Share Functionality
	 * Handles copy to clipboard and share tracking
	 */
	document.addEventListener('DOMContentLoaded', function() {
		const copyButtons = document.querySelectorAll('.copy-link');

		copyButtons.forEach(button => {
			button.addEventListener('click', async function() {
				const url = this.dataset.url;
				const copyText = this.querySelector('.copy-text');
				
				try {
					// Use modern clipboard API if available
					if (navigator.clipboard && window.isSecureContext) {
						await navigator.clipboard.writeText(url);
					} else {
						// Fallback for older browsers
						const textArea = document.createElement('textarea');
						textArea.value = url;
						textArea.style.position = 'fixed';
						textArea.style.left = '-999999px';
						textArea.style.top = '-999999px';
						document.body.appendChild(textArea);
						textArea.focus();
						textArea.select();
						document.execCommand('copy');
						document.body.removeChild(textArea);
					}
					
					// Show success feedback
					const originalText = copyText.textContent;
					copyText.textContent = 'Copied!';
					this.classList.add('copied');
					
					// Reset after 2 seconds
					setTimeout(() => {
						copyText.textContent = originalText;
						this.classList.remove('copied');
					}, 2000);
					
					// Track copy event
					if (typeof gtag !== 'undefined') {
						gtag('event', 'share', {
							method: 'copy_link',
							content_type: 'article',
							item_id: url
						});
					}
					
				} catch (err) {
					console.error('Failed to copy link:', err);
					copyText.textContent = 'Failed to copy';
					
					// Reset after 2 seconds
					setTimeout(() => {
						copyText.textContent = 'Copy Link';
					}, 2000);
				}
			});
		});

		// Track social share clicks
		const shareButtons = document.querySelectorAll('.share-btn:not(.copy-link)');
		shareButtons.forEach(button => {
			button.addEventListener('click', function() {
				const platform = this.classList[1]; // twitter, facebook, etc.
				const url = this.href;
				
				// Track share event
				if (typeof gtag !== 'undefined') {
					gtag('event', 'share', {
						method: platform,
						content_type: 'article',
						item_id: window.location.href
					});
				}
			});
		});
	});
</script>