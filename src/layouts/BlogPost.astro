---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import HeaderScript from '../components/HeaderScript.astro';
import SocialShare from '../components/SocialShare.astro';
import BlogSidebar from '../components/BlogSidebar.astro';
import GoToTop from '../components/GoToTop.astro';
import { SITE_AUTHOR } from '../consts';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

// Get all blog posts for related posts
const allPosts = await getCollection('blog');
const currentPath = Astro.url.pathname;
const currentSlug = currentPath.split('/').filter(Boolean).pop();

// Determine category and tags based on content
let category = 'Technology';
let categorySlug = 'tutorials';
const tags = [];

if (currentPath.includes('hosting') || currentPath.includes('hostnin') || currentPath.includes('cpanel')) {
  category = 'Web Hosting';
  categorySlug = 'hosting';
  tags.push('Web Hosting', 'cPanel', 'Server Management');
} else if (currentPath.includes('laravel') || currentPath.includes('filament')) {
  category = 'Laravel';
  categorySlug = 'laravel';
  tags.push('Laravel', 'PHP', 'Backend', 'Filament');
} else if (currentPath.includes('react')) {
  category = 'React';
  categorySlug = 'react';
  tags.push('React', 'JavaScript', 'Frontend', 'Hooks');
} else if (currentPath.includes('vue')) {
  category = 'Vue.js';
  categorySlug = 'vue';
  tags.push('Vue.js', 'JavaScript', 'Frontend', 'Composition API');
} else if (currentPath.includes('wordpress')) {
  category = 'WordPress';
  categorySlug = 'tutorials';
  tags.push('WordPress', 'CMS', 'PHP', 'Web Development');
} else {
  category = 'Tutorials';
  categorySlug = 'tutorials';
  tags.push('Tutorial', 'Programming', 'Web Development');
}

// Get related posts from the same category
const relatedPosts = allPosts
  .filter(post => {
    const postPath = `/blog/${post.id}/`;
    if (postPath === currentPath) return false; // Exclude current post
    
    // Check if post belongs to same category
    if (categorySlug === 'hosting') {
      return postPath.includes('hosting') || postPath.includes('hostnin') || postPath.includes('cpanel');
    } else if (categorySlug === 'laravel') {
      return postPath.includes('laravel') || postPath.includes('filament');
    } else if (categorySlug === 'react') {
      return postPath.includes('react');
    } else if (categorySlug === 'vue') {
      return postPath.includes('vue');
    } else {
      return postPath.includes('guide') || postPath.includes('tutorial') || postPath.includes('wordpress');
    }
  })
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);

// Generate keywords for SEO
const keywords = [
	'technology blog',
	'web development',
	'hosting solutions',
	'programming tutorials',
	...tags.map(tag => tag.toLowerCase())
];
---

<html lang="en">
	<head>
		<BaseHead 
			title={title} 
			description={description}
			heroImage={heroImage}
			article={{
				publishedTime: pubDate.toISOString(),
				modifiedTime: updatedDate?.toISOString(),
				author: SITE_AUTHOR,
				tags: tags,
				section: category
			}}
			keywords={keywords}
		/>
		<style>
			main {
				width: 100%;
				max-width: 100%;
				margin: 0;
				padding: 2rem 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 100%;
				max-width: 800px;
				margin: auto;
				padding: 0 2rem;
				color: var(--text-color);
			}
			.title {
				margin-bottom: 2rem;
				padding: 2rem 0;
				text-align: center;
				line-height: 1;
				border-bottom: 1px solid var(--border-color);
			}
			.title h1 {
				margin: 0 0 1rem 0;
				font-size: 2.5rem;
				line-height: 1.2;
				color: var(--text-color);
			}
			
			@media (max-width: 768px) {
				main {
					padding: 1rem 0;
				}
				
				.prose {
					padding: 0 1.25rem;
					max-width: 100%;
				}
				
				.title {
					padding: 2rem 0;
					margin-bottom: 1rem;
				}
				
				.title h1 {
					font-size: 2.25rem;
					line-height: 1.3;
					margin-bottom: 1.5rem;
				}
				
				.date {
					font-size: 1rem;
					margin-bottom: 1.5rem;
				}
				
				.hero-image {
					margin: 0 -1.25rem 2rem -1.25rem;
				}
				
				.hero-image img {
					border-radius: 0;
				}
				
				.post-category {
					margin: 2rem 0;
					padding: 1.25rem;
				}
				
				.post-tags {
					margin: 1.5rem 0;
				}
				
				.tag {
					padding: 0.5rem 1rem;
					font-size: 0.9rem;
				}
			}
			.date {
				margin-bottom: 1rem;
				color: var(--text-muted);
				font-size: 0.95rem;
			}
			.last-updated-on {
				font-style: italic;
			}
			
			/* Category and Tags Styles */
			.post-category {
				margin: 2rem 0;
				padding: 1rem;
				background: var(--bg-secondary);
				border-radius: 8px;
				border-left: 4px solid var(--accent);
			}
			
			.category-label {
				font-weight: 600;
				color: var(--text-muted);
				margin-right: 0.5rem;
			}
			
			.category-link {
				color: var(--accent);
				text-decoration: none;
				font-weight: 600;
				transition: color 0.2s ease;
			}
			
			.category-link:hover {
				color: var(--accent-dark);
			}
			
			.post-tags {
				margin: 1.5rem 0;
			}
			
			.tags-label {
				font-weight: 600;
				color: var(--text-muted);
				margin-bottom: 0.5rem;
				display: block;
			}
			
			.tags-list {
				display: flex;
				flex-wrap: wrap;
				gap: 0.5rem;
			}
			
			.tag {
				padding: 0.25rem 0.75rem;
				background: var(--accent-light);
				color: var(--accent);
				border-radius: 20px;
				font-size: 0.875rem;
				font-weight: 500;
				transition: all 0.2s ease;
			}
			
			.clickable-tag {
				text-decoration: none;
				cursor: pointer;
			}
			
			.clickable-tag:hover {
				background: var(--accent);
				color: white;
				transform: translateY(-2px);
				box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
			}
			
			/* Related Posts Styles */
			.related-posts {
				margin-top: 3rem;
				padding-top: 2rem;
				border-top: 2px solid var(--border-color);
			}
			
			.related-posts h3 {
				font-size: 1.5rem;
				font-weight: 700;
				margin-bottom: 1.5rem;
				color: var(--text-color);
			}
			
			.related-posts-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
				gap: 1.5rem;
			}
			
			.related-post {
				border: 1px solid var(--border-color);
				border-radius: 12px;
				overflow: hidden;
				transition: all 0.3s ease;
				background: var(--bg-color);
			}
			
			.related-post:hover {
				transform: translateY(-4px);
				box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
				border-color: var(--accent-light);
			}
			
			.related-post-link {
				text-decoration: none;
				color: inherit;
				display: block;
				height: 100%;
			}
			
			.related-post-image {
				width: 100%;
				height: 150px;
				overflow: hidden;
			}
			
			.related-post-image img {
				width: 100%;
				height: 100%;
				object-fit: cover;
				transition: transform 0.3s ease;
			}
			
			.related-post:hover .related-post-image img {
				transform: scale(1.05);
			}
			
			.related-post-content {
				padding: 1rem;
			}
			
			.related-post-title {
				font-size: 1rem;
				font-weight: 600;
				margin-bottom: 0.5rem;
				color: var(--text-color);
				line-height: 1.4;
				display: -webkit-box;
				-webkit-line-clamp: 2;
				-webkit-box-orient: vertical;
				overflow: hidden;
			}
			
			.related-post-date {
				font-size: 0.875rem;
				color: var(--text-muted);
				margin: 0;
			}
			
			/* Blog Layout Styles */
			.blog-layout {
				max-width: 1400px;
				margin: 0 auto;
				padding: 2rem 1rem;
			}
			
			.content-wrapper {
				display: grid;
				grid-template-columns: 1fr 300px;
				gap: 2rem;
				align-items: start;
			}
			
			.main-content {
				min-width: 0;
			}
			
			@media (max-width: 1200px) {
				.content-wrapper {
					grid-template-columns: 1fr;
				}
			}
			
			@media (max-width: 768px) {
				.blog-layout {
					padding: 1rem;
				}
				
				.related-posts-grid {
					grid-template-columns: 1fr;
				}
				
				.tags-list {
					justify-content: center;
				}
			}
		</style>
	</head>

	<body>
		<Header />
		<main class="blog-layout">
			<div class="content-wrapper">
				<article class="main-content">
					<div class="hero-image">
						{heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
					</div>
					<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
					
					<!-- Category Display -->
					<div class="post-category">
						<span class="category-label">Category:</span>
						<a href={`/blog?category=${categorySlug}`} class="category-link">
							{category}
						</a>
					</div>
					
					<!-- Tags Display -->
					{tags.length > 0 && (
						<div class="post-tags">
							<span class="tags-label">Tags:</span>
							<div class="tags-list">
								{tags.map((tag) => (
									<a href={`/blog?tag=${encodeURIComponent(tag)}`} class="tag clickable-tag">{tag}</a>
								))}
							</div>
						</div>
					)}
					
					<!-- Social Share Component -->
					<SocialShare 
						title={title} 
						description={description}
					/>
					
					<!-- Related Posts Section -->
					{relatedPosts.length > 0 && (
						<div class="related-posts">
							<h3>Related Articles</h3>
							<div class="related-posts-grid">
								{relatedPosts.map((post) => (
									<article class="related-post">
										<a href={`/blog/${post.id}/`} class="related-post-link">
											{post.data.heroImage && (
												<div class="related-post-image">
													<Image 
														src={post.data.heroImage} 
														alt={post.data.title}
														width={300} 
														height={200}
													/>
												</div>
											)}
											<div class="related-post-content">
												<h4 class="related-post-title">{post.data.title}</h4>
												<p class="related-post-date">
													<FormattedDate date={post.data.pubDate} />
												</p>
											</div>
										</a>
									</article>
								))}
							</div>
						</div>
					)}
					</div>
				</article>
				
				<!-- Blog Sidebar -->
				<BlogSidebar currentCategory={category} currentTags={tags} />
			</div>
		</main>
		<Footer />
		<GoToTop />
		<HeaderScript />
	</body>
</html>
