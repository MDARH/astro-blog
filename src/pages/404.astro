---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import GoToTop from '../components/GoToTop.astro';
import HeaderScript from '../components/HeaderScript.astro';
import { SITE_TITLE } from '../consts';

// SEO keywords for 404 page
const keywords = [
	'404 error',
	'page not found',
	'SomaDhanTech',
	'tech blog',
	'error page'
];
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead 
			title={`404 - Page Not Found | ${SITE_TITLE}`} 
			description="Sorry, the page you're looking for doesn't exist. Explore our latest tech articles and tutorials on SomaDhanTech."
			keywords={keywords}
			noindex={true}
		/>
	</head>
	<body>
		<Header />
		<main>
			<section class="error-page">
				<div class="container">
					<div class="error-content">
						<!-- 404 Illustration -->
						<div class="error-illustration">
							<svg width="300" height="200" viewBox="0 0 300 200" fill="none" xmlns="http://www.w3.org/2000/svg">
								<!-- Background -->
								<rect width="300" height="200" fill="var(--bg-secondary)" rx="12"/>
								
								<!-- 404 Text -->
								<text x="150" y="80" font-family="'Atkinson', sans-serif" font-size="48" font-weight="800" text-anchor="middle" fill="var(--accent)">
									404
								</text>
								
								<!-- Broken Link Icon -->
								<g transform="translate(120, 100)">
									<path d="M30 20 L50 20 M10 20 L20 20 M40 10 L50 10 M10 30 L20 30" stroke="var(--text-muted)" stroke-width="3" stroke-linecap="round"/>
									<circle cx="35" cy="20" r="8" fill="none" stroke="var(--accent)" stroke-width="2" stroke-dasharray="4,4">
										<animateTransform attributeName="transform" type="rotate" values="0 35 20;360 35 20" dur="3s" repeatCount="indefinite"/>
									</circle>
								</g>
								
								<!-- Floating Elements -->
								<circle cx="50" cy="50" r="3" fill="var(--accent)" opacity="0.6">
									<animate attributeName="cy" values="50;40;50" dur="2s" repeatCount="indefinite"/>
								</circle>
								<circle cx="250" cy="60" r="2" fill="var(--accent)" opacity="0.4">
									<animate attributeName="cy" values="60;50;60" dur="2.5s" repeatCount="indefinite"/>
								</circle>
								<circle cx="70" cy="150" r="2.5" fill="var(--accent)" opacity="0.5">
									<animate attributeName="cy" values="150;140;150" dur="1.8s" repeatCount="indefinite"/>
								</circle>
							</svg>
						</div>

						<!-- Error Message -->
						<div class="error-message">
							<h1 class="error-title">Oops! Page Not Found</h1>
							<p class="error-description">
								The page you're looking for seems to have wandered off into the digital void. 
								Don't worry, even the best developers encounter 404s!
							</p>
							
							<!-- Action Buttons -->
							<div class="error-actions">
								<a href="/" class="btn btn-primary">
									<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
										<path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
										<polyline points="9,22 9,12 15,12 15,22"></polyline>
									</svg>
									Go Home
								</a>
								<a href="/blog" class="btn btn-secondary">
									<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
										<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
										<polyline points="14,2 14,8 20,8"></polyline>
										<line x1="16" y1="13" x2="8" y2="13"></line>
										<line x1="16" y1="17" x2="8" y2="17"></line>
										<polyline points="10,9 9,9 8,9"></polyline>
									</svg>
									Browse Articles
								</a>
								<button onclick="history.back()" class="btn btn-outline">
									<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
										<path d="M19 12H5M12 19l-7-7 7-7"></path>
									</svg>
									Go Back
								</button>
							</div>
						</div>
					</div>

					<!-- Helpful Links Section -->
					<div class="helpful-links">
						<h2>Popular Pages</h2>
						<div class="links-grid">
							<a href="/blog/choosing-right-web-hosting" class="link-card">
								<div class="link-icon">üåê</div>
								<h3>Web Hosting Guide</h3>
								<p>Choose the right hosting solution</p>
							</a>
							<a href="/blog/react-hooks-complete-guide" class="link-card">
								<div class="link-icon">‚öõÔ∏è</div>
								<h3>React Hooks Guide</h3>
								<p>Master modern React development</p>
							</a>
							<a href="/blog/domain-name-best-practices" class="link-card">
								<div class="link-icon">üîó</div>
								<h3>Domain Management</h3>
								<p>Best practices for domains</p>
							</a>
							<a href="/blog" class="link-card">
								<div class="link-icon">üìö</div>
								<h3>All Articles</h3>
								<p>Browse all our tech articles</p>
							</a>
						</div>
					</div>
				</div>
			</section>
		</main>
		<Footer />
		<GoToTop />
		<HeaderScript />
	</body>
</html>

<style>
	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 2rem;
	}

	.error-page {
		padding: 6rem 0;
		min-height: 70vh;
		display: flex;
		align-items: center;
	}

	.error-content {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 4rem;
		align-items: center;
		margin-bottom: 4rem;
	}

	.error-illustration {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.error-illustration svg {
		max-width: 100%;
		height: auto;
		filter: drop-shadow(0 4px 12px rgba(0, 0, 0, 0.1));
	}

	.error-message {
		text-align: left;
	}

	.error-title {
		font-size: 3rem;
		font-weight: 800;
		margin-bottom: 1.5rem;
		color: var(--text-color);
		line-height: 1.2;
	}

	.error-description {
		font-size: 1.2rem;
		color: var(--text-muted);
		line-height: 1.6;
		margin-bottom: 2.5rem;
	}

	.error-actions {
		display: flex;
		gap: 1rem;
		flex-wrap: wrap;
	}

	/* Button Styles */
	.btn {
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
		padding: 1rem 1.5rem;
		border-radius: 8px;
		text-decoration: none;
		font-weight: 600;
		transition: all 0.2s ease;
		border: 2px solid transparent;
		cursor: pointer;
		font-size: 1rem;
		background: none;
		font-family: inherit;
	}

	.btn-primary {
		background: var(--accent);
		color: white;
	}

	.btn-primary:hover {
		background: var(--accent-dark);
		transform: translateY(-2px);
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
	}

	.btn-secondary {
		background: var(--bg-secondary);
		color: var(--text-color);
		border-color: var(--border-color);
	}

	.btn-secondary:hover {
		background: var(--accent-light);
		border-color: var(--accent);
		color: var(--accent);
	}

	.btn-outline {
		background: transparent;
		color: var(--text-muted);
		border-color: var(--border-color);
	}

	.btn-outline:hover {
		background: var(--bg-secondary);
		color: var(--text-color);
		border-color: var(--text-color);
	}

	/* Helpful Links Section */
	.helpful-links {
		text-align: center;
	}

	.helpful-links h2 {
		font-size: 2rem;
		margin-bottom: 2rem;
		color: var(--text-color);
	}

	.links-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		gap: 1.5rem;
		margin-top: 2rem;
	}

	.link-card {
		background: var(--card-bg);
		border: 1px solid var(--border-color);
		border-radius: 12px;
		padding: 2rem 1.5rem;
		text-decoration: none;
		color: inherit;
		transition: all 0.2s ease;
		display: block;
	}

	.link-card:hover {
		transform: translateY(-4px);
		box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
		border-color: var(--accent);
	}

	.link-icon {
		font-size: 2.5rem;
		margin-bottom: 1rem;
	}

	.link-card h3 {
		font-size: 1.2rem;
		margin-bottom: 0.5rem;
		color: var(--text-color);
	}

	.link-card p {
		color: var(--text-muted);
		margin: 0;
		font-size: 0.9rem;
	}

	/* Responsive Design */
	@media (max-width: 768px) {
		.container {
			padding: 0 1rem;
		}

		.error-page {
			padding: 4rem 0;
		}

		.error-content {
			grid-template-columns: 1fr;
			gap: 2rem;
			text-align: center;
		}

		.error-message {
			text-align: center;
		}

		.error-title {
			font-size: 2.5rem;
		}

		.error-description {
			font-size: 1.1rem;
		}

		.error-actions {
			justify-content: center;
			flex-direction: column;
			align-items: center;
		}

		.error-actions .btn {
			width: 100%;
			max-width: 280px;
			justify-content: center;
		}

		.links-grid {
			grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
			gap: 1rem;
		}

		.link-card {
			padding: 1.5rem 1rem;
		}
	}

	/* Animation for error illustration */
	@keyframes float {
		0%, 100% { transform: translateY(0px); }
		50% { transform: translateY(-10px); }
	}

	.error-illustration {
		animation: float 3s ease-in-out infinite;
	}

	/* Dark mode specific adjustments */
	[data-theme="dark"] .error-illustration svg rect {
		fill: var(--bg-secondary);
	}

	[data-theme="dark"] .btn-secondary {
		background: var(--card-bg);
	}
</style>

<script>
	/**
	 * 404 Page Analytics and User Experience
	 * Track 404 errors and provide helpful navigation
	 */
	document.addEventListener('DOMContentLoaded', function() {
		// Track 404 page view for analytics
		if (typeof gtag !== 'undefined') {
			gtag('event', 'page_view', {
				page_title: '404 - Page Not Found',
				page_location: window.location.href,
				custom_parameter: '404_error'
			});
		}

		// Log the 404 for debugging (in development)
		if (window.location.hostname === 'localhost') {
			console.log('404 Error - Page not found:', window.location.pathname);
		}

		// Add keyboard navigation for accessibility
		document.addEventListener('keydown', function(e) {
			if (e.key === 'Escape') {
				history.back();
			} else if (e.key === 'h' || e.key === 'H') {
				window.location.href = '/';
			}
		});

		// Show helpful keyboard shortcuts
		const showKeyboardHelp = () => {
			const helpText = document.createElement('div');
			helpText.style.cssText = `
				position: fixed;
				bottom: 20px;
				left: 20px;
				background: var(--card-bg);
				border: 1px solid var(--border-color);
				border-radius: 8px;
				padding: 1rem;
				font-size: 0.8rem;
				color: var(--text-muted);
				z-index: 1000;
				opacity: 0;
				transition: opacity 0.3s ease;
			`;
			helpText.innerHTML = `
				<strong>Keyboard Shortcuts:</strong><br>
				Press 'H' for Home<br>
				Press 'Esc' to go back
			`;
			document.body.appendChild(helpText);

			// Show help after a delay
			setTimeout(() => {
				helpText.style.opacity = '1';
			}, 2000);

			// Hide help after 5 seconds
			setTimeout(() => {
				helpText.style.opacity = '0';
				setTimeout(() => {
					document.body.removeChild(helpText);
				}, 300);
			}, 7000);
		};

		// Show keyboard help
		showKeyboardHelp();
	});
</script>